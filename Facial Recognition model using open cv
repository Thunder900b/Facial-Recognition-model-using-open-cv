import numpy as np  # used for numpy array
import cv2 #for accessing the camera

import face_recognition
import csv  # for handeling the csv files
from datetime import datetime  # for exact date and time

video_capture = cv2.VideoCapture(0)  # for capturing video from open cv
# attribute traning patr
Sagnik1_image = face_recognition.load_image_file("D:\\my world\\face recognition\\photos\\Sagnik Chakraborty 1.jpg")
Sagnik1_encoding = face_recognition.face_encodings(Sagnik1_image)[0]

Srijan1_image = face_recognition.load_image_file("D:\\my world\\face recognition\\photos\\Srijan 1.jpeg")
Srijan1_encoding = face_recognition.face_encodings(Srijan1_image)[0]
known_face_encoding = [
    Sagnik1_encoding,
    Srijan1_encoding,
]
# denoting names od the given attributes
known_faces_names = [
    "Sagnik Chakraborty",
    "Srijan Shekhar"
]

people = known_faces_names.copy()

face_locations = [] #used to save the face locetion
face_encoding = [] #Raw traning data
face_names = [] #names of the faces
s = True

now = datetime.now()
current_date = now.strftime("%Y-%m-%d") #for determining the date of capture

#we are using the open method, opening this with w+ method or write+ method
f = open(current_date + '.csv', 'w+', newline='')
lnwriter = csv.writer(f)

while True:
    _, frame = video_capture.read() #here taking the video input
    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25) #decreasing the size of the input coming from the webcam
    rgb_small_frame = small_frame[:, :, ::-1] #converting inti RGB
    if s:
        face_locations = face_recognition.face_locations(rgb_small_frame) #for detecting if there is any face  or not
        face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations) #encoding the face from the web cam
        face_names = []
        for face_encoding in face_encodings:
            matches = face_recognition.compare_faces(known_face_encoding, face_encoding) #comparing the face with the stored one
            name = "" #after recognition this variable will contain the name of the face
            face_distance = face_recognition.face_distance(known_face_encoding, face_encoding)
            best_match_index = np.argmin(face_distance)
            if matches[best_match_index]:
                name = known_faces_names[best_match_index]

            face_names.append(name)
            if name in known_faces_names:  #now if the name present in database "people" then->
                if name in people:
                    people.remove(name) #it will remove the name from the student list
                    print(people)
                    current_time = now.strftime("%H-%M-%S")
                    lnwriter.writerow([name, current_time]) #and here it will enter the name in the xl file with time
    cv2.imshow("present people system", frame) #showing output
    if cv2.waitKey(1) & 0xFF == ord('q'): #exit from q button
        break
video_capture.release()
cv2.destroyAllWindows()
f.close()
